// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.DAL;

namespace backend.Migrations
{
    [DbContext(typeof(BatmanContext))]
    [Migration("20190802131823_init_db")]
    partial class init_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("backend.Models.AcousticData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactNumbers");

                    b.Property<int>("PositiveMinute");

                    b.Property<int>("RecordId");

                    b.Property<string>("SpeciesId");

                    b.Property<string>("Validation");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.ToTable("AcousticDatas");
                });

            modelBuilder.Entity("backend.Models.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("backend.Models.BoxLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxId");

                    b.Property<DateTime?>("EndDay");

                    b.Property<string>("Habitat1");

                    b.Property<string>("Habitat2");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<int>("OperatorId");

                    b.Property<string>("SiteName");

                    b.Property<DateTime>("StartDay");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.HasIndex("OperatorId");

                    b.ToTable("BoxLocations");
                });

            modelBuilder.Entity("backend.Models.Operator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Operators");
                });

            modelBuilder.Entity("backend.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("backend.Models.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoxLocationId");

                    b.Property<DateTime>("EndHour");

                    b.Property<int>("ProjectId");

                    b.Property<string>("RecordUrl");

                    b.Property<DateTime>("StartHour");

                    b.HasKey("Id");

                    b.HasIndex("BoxLocationId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("backend.Models.AcousticData", b =>
                {
                    b.HasOne("backend.Models.Record", "Record")
                        .WithMany("AcousticData")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.Models.BoxLocation", b =>
                {
                    b.HasOne("backend.Models.Box", "Box")
                        .WithMany("BoxLocations")
                        .HasForeignKey("BoxId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Operator", "Operator")
                        .WithMany("BoxLocations")
                        .HasForeignKey("OperatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("backend.Models.Record", b =>
                {
                    b.HasOne("backend.Models.BoxLocation", "BoxLocation")
                        .WithMany("Records")
                        .HasForeignKey("BoxLocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("backend.Models.Project", "Project")
                        .WithMany("Records")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
